if not ENV.has_key?("AO_DEFAULT_VAGRANT_PASSWORD") then
  abort "ERROR: AO_DEFAULT_VAGRANT_PASSWORD environment variable is not defined"
end

tekla_distr = "/mnt/data/temp/tekla/"
mem_size = "8192"
if File.file?("local-config.yml")
  local_config = YAML.load_file("local-config.yml")
  unless local_config.nil?
    tekla_distr = local_config.fetch("tekla_distr", tekla_distr)
    mem_size = local_config.fetch("mem_size", mem_size)
  end
end


Vagrant.configure("2") do |config|
  config.vm.define "win10" do |win10|
    win10.vm.box = "cheretbe/win10ltsc2019_ru_64"
    win10.winrm.username = "vagrant"
    win10.winrm.password = "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}"
    win10.vm.boot_timeout = 900
    win10.vm.synced_folder tekla_distr, "/tekla_distr"
    win10.vm.synced_folder "..", "/tekla-poc"

    win10.vm.provider "virtualbox" do |vb|
      vb.memory = mem_size
      vb.cpus = "2"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    end

    win10.vm.network "private_network", ip: "172.24.0.11", virtualbox__intnet: "vagrant-intnet"

    win10.vm.provision "shell",
      keep_color: true,
      inline: <<-SHELL
        if ($NULL -eq (Get-NetFirewallRule -DisplayName "_ansible_provision" -ErrorAction SilentlyContinue)) {
          Write-Host "Adding firewall rule (allow access from 172.24.0.0/24)"
          New-NetFirewallRule -DisplayName "_ansible_provision" -RemoteAddress "172.24.0.0/24" | Out-Null
        }
      SHELL
  end

  config.vm.define :"ansible-controller" do |ansible_controller|
    ansible_controller.vm.box = "ubuntu/focal64"
    ansible_controller.vm.hostname = "ansible-controller"
    ansible_controller.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # if not Vagrant::Util::Platform.windows? then
      #   vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
      # end
    end
    ansible_controller.vm.network "private_network", ip: "172.24.0.10", virtualbox__intnet: "vagrant-intnet"
    ansible_controller.vm.provision "shell",
      keep_color: true,
      inline: <<-SHELL
        set -euo pipefail

        export DEBIAN_FRONTEND=noninteractive
        apt-get update
        #apt-get -yq install software-properties-common python3
        #apt-add-repository --yes --update ppa:ansible/ansible
        apt-get -yq install ansible

        ansible-galaxy collection install community.windows

        ansible-playbook -i 172.24.0.11, -u vagrant \
          --extra-vars "ansible_password=#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}" \
          --extra-vars " ansible_connection=winrm ansible_port=5985 ansible_winrm_transport=ntlm" \
          /vagrant/provision.yml
      SHELL
  end
end
